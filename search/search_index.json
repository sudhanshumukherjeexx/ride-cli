{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"RIDE CLI Documentation","text":"<p>Welcome to the RIDE CLI (Rapid Insights Data Engine) documentation! RIDE is an interactive command-line tool for data analysis that lets you perform data preprocessing, exploration, and machine learning without writing code.</p>"},{"location":"#features","title":"Features","text":"<ul> <li>\ud83d\ude80 Interactive Interface: User-friendly terminal interface for data analysis</li> <li>\ud83d\udcca Data Loading: Support for CSV, Excel, and Parquet files</li> <li>\ud83d\udd0d Data Exploration: Comprehensive statistical analysis and visualization</li> <li>\ud83e\uddf9 Data Preprocessing: Missing value imputation, feature scaling, encoding</li> <li>\ud83e\udd16 AutoML: Automatic model selection and evaluation</li> <li>\ud83d\udcc8 Visualization: Terminal-based plots and charts</li> <li>\ud83d\udcbe Export Options: Save processed data in multiple formats</li> </ul>"},{"location":"#quick-start","title":"Quick Start","text":"<p>Install RIDE CLI using pip:</p> <pre><code>pip install ride-cli\n</code></pre> <p>Launch the interactive interface:</p> <pre><code>ride\n</code></pre> <p>Or directly load a dataset:</p> <pre><code>ride your-dataset.csv\n</code></pre>"},{"location":"#why-ride-cli","title":"Why RIDE-CLI?","text":"<p>RIDE was created to make data analysis accessible to everyone, regardless of programming experience. Whether you're a data scientist looking for quick exploratory analysis or a business analyst who needs to understand data faster, RIDE provides the tools you need in an easy-to-use interface.</p>"},{"location":"#key-benefits","title":"Key Benefits","text":"<ul> <li>No Coding Required: Perform complex data operations through an interactive menu</li> <li>Fast Exploration: Quickly understand your data with built-in statistical analysis</li> <li>AutoML Capabilities: Automatically find the best machine learning model for your data</li> <li>Cross-Platform: Works on Windows, macOS, and Linux</li> <li>Open Source: Free to use and modify</li> </ul>"},{"location":"#getting-help","title":"Getting Help","text":"<ul> <li>Check out Quick Start Guide</li> <li>Check out Interface Guide for detailed instructions</li> <li>Check out Installation Guide </li> <li>Report issues on GitHub</li> </ul>"},{"location":"#quick-links","title":"Quick Links","text":"<ul> <li>CLI Module Reference</li> <li>Utils Module Reference</li> <li>AutoML Processor Reference</li> </ul>"},{"location":"#latest-updates","title":"Latest Updates","text":"<p>Check out our Changelog for the latest features and improvements.</p> <p>Made with \u2764\ufe0f by Sudhanshu Mukherjee</p>"},{"location":"about/","title":"About RIDE CLI","text":""},{"location":"about/#project-overview","title":"Project Overview","text":"<p>RIDE CLI (Rapid Insights Data Engine) is an open-source data analysis and preprocessing tool designed to make data science accessible to everyone, regardless of their programming experience. It provides a user-friendly terminal interface for performing complex data operations without writing code.</p>"},{"location":"about/#mission","title":"Mission","text":"<p>Our mission is to democratize data analysis by providing powerful tools that don't require extensive programming knowledge. We believe that everyone should be able to explore, clean, and analyze their data efficiently, regardless of their technical background.</p>"},{"location":"about/#history","title":"History","text":""},{"location":"about/#from-prepup-linux-to-ride-cli","title":"From prepup-linux to RIDE CLI","text":"<p>RIDE CLI began as \"prepup-linux,\" a tool initially developed to provide data preprocessing capabilities specifically for Linux users. As the project evolved, we recognized the need for a platform-agnostic solution that could serve users across all operating systems.</p> <p>In May 2025, we rebranded from \"prepup-linux\" to \"RIDE CLI\" to reflect our commitment to cross-platform support and to better describe the tool's purpose as a Rapid Insights Data Engine.</p>"},{"location":"about/#timeline","title":"Timeline","text":"<ul> <li>2023: Initial development of prepup-linux begins</li> <li>2024: Multiple release of prepup-linux with different analysis structures</li> <li>May 2024: Project renamed to RIDE CLI with enhanced features, menu driven approach, and cross-platform support</li> </ul>"},{"location":"about/#core-features","title":"Core Features","text":"<p>RIDE CLI offers a comprehensive set of features for data analysis:</p> <ul> <li>Data Loading: Support for CSV, Excel, and Parquet files</li> <li>Data Inspection: Explore dataset structure and content</li> <li>Statistical Analysis: Correlation analysis, distribution testing, outlier detection</li> <li>Data Visualization: Terminal-based plots and charts</li> <li>Data Preprocessing: Missing value handling, feature encoding, scaling</li> <li>AutoML: Automated machine learning model selection</li> <li>Export Options: Save processed data in various formats</li> </ul>"},{"location":"about/#technology-stack","title":"Technology Stack","text":"<p>RIDE CLI is built with:</p> <ul> <li>Python: Core programming language</li> <li>pandas: Data manipulation and analysis</li> <li>scikit-learn: Machine learning capabilities</li> <li>plotext: Terminal-based visualization</li> <li>numpy: Numerical operations</li> <li>termcolor: Terminal color formatting</li> <li>pyfiglet: ASCII art generation</li> </ul>"},{"location":"about/#contributors","title":"Contributors","text":"<p>RIDE CLI is maintained by Sudhanshu Mukherjee with contributions from the open-source community.</p>"},{"location":"about/#contribution-recognition","title":"Contribution Recognition","text":"<p>We'd like to thank all contributors who have helped make RIDE CLI better. See our GitHub contributors page for a complete list.</p>"},{"location":"about/#license","title":"License","text":"<p>RIDE CLI is released under the MIT License. This permits use, modification, and distribution of the code for both private and commercial purposes. See the LICENSE file for details.</p>"},{"location":"about/#citing-ride-cli","title":"Citing RIDE CLI","text":"<p>If you use RIDE CLI in your research or academic work, please cite it as:</p>"},{"location":"about/#ieee-format","title":"IEEE Format","text":"<p>S. Mukherjee, \"RIDE CLI: Rapid Insights Data Engine for Data analysis using terminal,\" 2024. [Online]. Available: https://github.com/sudhanshumukherjeexx/ride-cli</p>"},{"location":"about/#bibtex-format","title":"BibTeX Format","text":"<pre><code>@software{mukherjee2024ride,\n  author = {Mukherjee, Sudhanshu},\n  title = {RIDE CLI: Rapid Insights Data Engine for Data analysis using terminal},\n  year = {2024},\n  url = {https://github.com/sudhanshumukherjeexx/ride-cli}\n}\n</code></pre>"},{"location":"changelog/","title":"Changelog","text":"<p>All notable changes to this project will be documented in this file.</p> <p>The format is based on Keep a Changelog, and this project adheres to Semantic Versioning.</p>"},{"location":"changelog/#031-2025-05-04","title":"[0.3.1] - 2025-05-04","text":""},{"location":"changelog/#added","title":"Added","text":"<ul> <li>Comprehensive test suite for core functionality</li> <li>Test coverage for AutoML processor, CLI interface, and utilities</li> <li>Automated testing workflow with pytest</li> <li>Test fixtures for better test isolation</li> </ul>"},{"location":"changelog/#fixed","title":"Fixed","text":"<ul> <li>Fixed <code>missing_values_count</code> method in utils.py (empty property was incorrectly called as method)</li> <li>Fixed stdout handling in CLI to prevent test failures</li> <li>Fixed import issues in test files</li> </ul>"},{"location":"changelog/#changed","title":"Changed","text":"<ul> <li>Added openpyxl as a dependency for Excel file support in tests</li> </ul>"},{"location":"changelog/#developer-notes","title":"Developer Notes","text":"<ul> <li>All tests now passing successfully (21 tests)</li> <li>Fixed pytest compatibility issues with stdout modification</li> <li>Improved test isolation using fixtures</li> </ul>"},{"location":"changelog/#030-2025-05-04","title":"[0.3.0] - 2025-05-04","text":""},{"location":"changelog/#changed_1","title":"Changed","text":"<ul> <li>BREAKING: Renamed package from <code>prepup-linux</code> to <code>ride-cli</code></li> <li>Rebranded from \"Prepup\" to \"RIDE\" (Rapid Insights Data Engine) CLI</li> <li>Updated command from <code>prepup</code> to <code>ride</code> (with <code>ride-cli</code> as alternative)  </li> <li>Renamed internal module from <code>main</code> to <code>ride</code></li> <li>Renamed main entry point from <code>run.py</code> to <code>cli.py</code></li> <li>Updated all internal references and imports</li> <li>Enhanced user interface with new branding</li> </ul>"},{"location":"changelog/#added_1","title":"Added","text":"<ul> <li>Cross-platform support messaging (no longer implies Linux-only)</li> <li>Alternative command <code>ride-cli</code> for consistency with package name</li> <li>Migration instructions in README</li> <li>Modern packaging configuration with pyproject.toml</li> </ul>"},{"location":"changelog/#fixed_1","title":"Fixed","text":"<ul> <li>Misleading package name that suggested Linux-only support</li> </ul>"},{"location":"api/automl/","title":"AutoML Processor API Reference","text":"<p>The <code>automl_processor.py</code> module provides automatic machine learning capabilities for classification and regression tasks.</p>"},{"location":"api/automl/#classes","title":"Classes","text":""},{"location":"api/automl/#automlprocessor","title":"<code>AutoMLProcessor</code>","text":"<p>Main class for automated machine learning pipeline.</p> <pre><code>class AutoMLProcessor:\n    def __init__(self, dataframe: pd.DataFrame)\n</code></pre>"},{"location":"api/automl/#parameters","title":"Parameters","text":"<ul> <li><code>dataframe</code>: pandas.DataFrame - Input dataframe for processing and analysis</li> </ul>"},{"location":"api/automl/#attributes","title":"Attributes","text":"<ul> <li><code>original_df</code>: pandas.DataFrame - Copy of the original input dataframe</li> <li><code>preprocessed_df</code>: pandas.DataFrame or None - Preprocessed dataset</li> <li><code>X_train</code>: pandas.DataFrame or None - Training features</li> <li><code>X_test</code>: pandas.DataFrame or None - Testing features</li> <li><code>y_train</code>: pandas.Series or None - Training target</li> <li><code>y_test</code>: pandas.Series or None - Testing target</li> </ul>"},{"location":"api/automl/#methods","title":"Methods","text":""},{"location":"api/automl/#run_automltarget_column-str-task_type-str-classification-pddataframe","title":"<code>run_automl(target_column: str, task_type: str = 'classification') -&gt; pd.DataFrame</code>","text":"<p>Main method to run the automated machine learning pipeline.</p> <p>Parameters: - <code>target_column</code>: str - Name of the target column - <code>task_type</code>: str - Type of task ('classification' or 'regression')</p> <p>Returns: - pandas.DataFrame - Results of model evaluations with metrics</p> <p>Features: - Validates task type - Preprocesses data automatically - Splits data into train/test sets - Evaluates multiple models - Returns comparative results</p> <p>Example: <pre><code>automl = AutoMLProcessor(df)\nresults = automl.run_automl('target', 'classification')\n</code></pre></p>"},{"location":"api/automl/#private-methods","title":"Private Methods","text":""},{"location":"api/automl/#_preprocess_datatarget_column-str-task_type-str-tuplepddataframe-pdseries","title":"<code>_preprocess_data(target_column: str, task_type: str) -&gt; Tuple[pd.DataFrame, pd.Series]</code>","text":"<p>Comprehensive data preprocessing with robust NaN handling.</p> <p>Parameters: - <code>target_column</code>: str - Target column name - <code>task_type</code>: str - 'classification' or 'regression'</p> <p>Returns: - Tuple[pd.DataFrame, pd.Series] - Preprocessed features and target</p> <p>Preprocessing Steps: 1. Handle missing values 2. Convert target to numeric for regression 3. Remove rows with missing target values 4. Impute missing values in features 5. Encode categorical variables 6. Scale features</p>"},{"location":"api/automl/#_split_datax-pddataframe-y-pdseries-test_size-float-02-none","title":"<code>_split_data(X: pd.DataFrame, y: pd.Series, test_size: float = 0.2) -&gt; None</code>","text":"<p>Splits data into training and testing sets.</p> <p>Parameters: - <code>X</code>: pd.DataFrame - Feature matrix - <code>y</code>: pd.Series - Target variable - <code>test_size</code>: float - Proportion for testing (default: 0.2)</p> <p>Features: - Stratified split for classification (if &lt; 10 classes) - Random state for reproducibility - Updates instance attributes</p>"},{"location":"api/automl/#_run_classification_models-pddataframe","title":"<code>_run_classification_models() -&gt; pd.DataFrame</code>","text":"<p>Evaluates multiple classification models.</p> <p>Models Tested: 1. Random Forest 2. Extra Trees 3. Logistic Regression 4. Decision Tree 5. K-Nearest Neighbors 6. Support Vector Machine 7. Naive Bayes 8. AdaBoost 9. XGBoost (if available) 10. LightGBM (if available)</p> <p>Metrics Calculated: - Accuracy - Balanced Accuracy - F1 Score - Precision - Recall - ROC AUC (when possible)</p> <p>Returns: - pandas.DataFrame - Comparative results sorted by Balanced Accuracy</p>"},{"location":"api/automl/#_run_regression_models-pddataframe","title":"<code>_run_regression_models() -&gt; pd.DataFrame</code>","text":"<p>Evaluates multiple regression models.</p> <p>Models Tested: 1. Random Forest 2. Extra Trees 3. Linear Regression 4. Ridge Regression 5. Lasso Regression 6. Elastic Net 7. Decision Tree 8. K-Nearest Neighbors 9. Support Vector Regression 10. AdaBoost 11. XGBoost (if available) 12. LightGBM (if available)</p> <p>Metrics Calculated: - R\u00b2 - Adjusted R\u00b2 - MSE (Mean Squared Error) - RMSE (Root Mean Squared Error) - MAE (Mean Absolute Error) - MAPE (Mean Absolute Percentage Error)</p> <p>Returns: - pandas.DataFrame - Comparative results sorted by Adjusted R\u00b2</p>"},{"location":"api/automl/#functions","title":"Functions","text":""},{"location":"api/automl/#example_automl_usagecsv_path-str-target_column-str-task_type-str-classification","title":"<code>example_automl_usage(csv_path: str, target_column: str, task_type: str = 'classification')</code>","text":"<p>Demonstrates AutoML usage with a CSV file.</p> <p>Parameters: - <code>csv_path</code>: str - Path to the input CSV file - <code>target_column</code>: str - Name of the target column - <code>task_type</code>: str - 'classification' or 'regression' (default: 'classification')</p> <p>Features: - Loads CSV file - Initializes AutoML processor - Runs AutoML pipeline - Saves results to CSV - Handles errors gracefully</p> <p>Example: <pre><code>example_automl_usage('data.csv', 'target', 'classification')\n</code></pre></p>"},{"location":"api/automl/#model-evaluation-details","title":"Model Evaluation Details","text":""},{"location":"api/automl/#classification-metrics","title":"Classification Metrics","text":"<ol> <li>Accuracy: Overall correct predictions</li> <li>Balanced Accuracy: Average recall per class</li> <li>F1 Score: Harmonic mean of precision and recall</li> <li>Precision: True positives / (True positives + False positives)</li> <li>Recall: True positives / (True positives + False negatives)</li> <li>ROC AUC: Area under ROC curve (binary or multiclass)</li> </ol>"},{"location":"api/automl/#regression-metrics","title":"Regression Metrics","text":"<ol> <li>R\u00b2: Coefficient of determination</li> <li>Adjusted R\u00b2: R\u00b2 adjusted for number of predictors</li> <li>MSE: Mean Squared Error</li> <li>RMSE: Root Mean Squared Error</li> <li>MAE: Mean Absolute Error</li> <li>MAPE: Mean Absolute Percentage Error</li> </ol>"},{"location":"api/automl/#data-preprocessing-pipeline","title":"Data Preprocessing Pipeline","text":"<ol> <li>Missing Value Analysis</li> <li>Reports initial missing values</li> <li>Removes rows with missing target values</li> <li> <p>Imputes missing values in features</p> </li> <li> <p>Feature Type Handling</p> </li> <li>Identifies numeric and categorical columns</li> <li> <p>Applies appropriate imputation strategies</p> </li> <li> <p>Categorical Encoding</p> </li> <li>One-hot encoding for low cardinality (\u2264 10 unique values)</li> <li>Label encoding for moderate cardinality (\u2264 50 unique values)</li> <li> <p>Drops high cardinality columns</p> </li> <li> <p>Feature Scaling</p> </li> <li>Standard scaling for all numeric features</li> <li>Preserves column names and indices</li> </ol>"},{"location":"api/automl/#error-handling","title":"Error Handling","text":"<p>The module includes error handling for: - Invalid target column - Data type conversion errors - Model fitting failures - Missing library dependencies - File I/O errors</p>"},{"location":"api/automl/#optional-dependencies","title":"Optional Dependencies","text":"<ul> <li>XGBoost: Advanced gradient boosting</li> <li>LightGBM: Light gradient boosting machine</li> </ul> <p>These libraries are optional and will be used if available.</p>"},{"location":"api/automl/#usage-example","title":"Usage Example","text":"<pre><code>import pandas as pd\nfrom ride.automl_processor import AutoMLProcessor\n\n# Load your data\ndf = pd.read_csv('your_data.csv')\n\n# Initialize AutoML processor\nautoml = AutoMLProcessor(df)\n\n# Run AutoML for classification\nresults = automl.run_automl('target_column', 'classification')\n\n# View results\nprint(results)\n\n# Save results\nresults.to_csv('automl_results.csv')\n</code></pre>"},{"location":"api/automl/#performance-considerations","title":"Performance Considerations","text":"<ul> <li>The preprocessing pipeline handles datasets with mixed data types</li> <li>Automatic handling of categorical variables based on cardinality</li> <li>Stratified splitting for balanced classification datasets</li> <li>Parallel model evaluation where supported by underlying libraries</li> <li>Memory-efficient preprocessing with in-place operations where possible</li> </ul>"},{"location":"api/automl/#output-format","title":"Output Format","text":"<p>Results are returned as a pandas DataFrame with: - Index: Model names - Columns: Performance metrics - Sorted by primary metric (Balanced Accuracy or Adjusted R\u00b2)</p> <p>Example output:</p> <pre><code>\ud83d\udcca Classification Model Comparison:\n\n                     Accuracy  Balanced Accuracy  F1 Score  Precision    Recall   ROC AUC\nModel                                                                                    \nSVM                  0.940299           0.939840  0.940219   0.941823  0.940299  0.959893\nExtra Trees          0.925373           0.925134  0.925340   0.925720  0.925373  0.962121\nRandom Forest        0.910448           0.909537  0.910047   0.916245  0.910448  0.949198\nLogistic Regression  0.910448           0.909537  0.910047   0.916245  0.910448  0.953654\nLightGBM             0.910448           0.909537  0.910047   0.916245  0.910448  0.943850\nDecision Tree        0.895522           0.894831  0.895242   0.898588  0.895522  0.894831\nKNN                  0.880597           0.880125  0.880437   0.881854  0.880597  0.926025\nAdaBoost             0.865672           0.864528  0.864767   0.873736  0.865672  0.940285\nNaive Bayes          0.701493           0.700535  0.700155   0.703876  0.701493  0.858289\n</code></pre> <pre><code>\ud83d\udcca Regression Model Comparison:\n                         R\u00b2        MSE      RMSE       MAE      MAPE  Adjusted R\u00b2\nModel                                                                            \nRidge Regression   0.858259   3.738288  1.933465  1.420402  0.033227     0.833821\nLinear Regression  0.857912   3.747438  1.935830  1.419027  0.033188     0.833414\nSVR                0.848365   3.999225  1.999806  1.542758  0.036247     0.822222\nLightGBM           0.830124   4.480322  2.116677  1.641753  0.037996     0.800835\nKNN                0.813527   4.918070  2.217672  1.706957  0.039691     0.781376\nAdaBoost           0.812594   4.942659  2.223209  1.736601  0.039801     0.780283\nRandom Forest      0.805153   5.138925  2.266920  1.774667  0.041109     0.771558\nElastic Net        0.774345   5.951451  2.439560  1.922946  0.044926     0.735439\nXGBoost            0.768700   6.100328  2.469884  1.888304  0.043739     0.728821\nExtra Trees        0.766232   6.165434  2.483029  1.941652  0.044976     0.725927\nLasso Regression   0.753465   6.502142  2.549930  2.014548  0.046989     0.710959\nDecision Tree      0.530831  12.373913  3.517657  2.747826  0.064468     0.449940\n</code></pre>"},{"location":"api/cli/","title":"CLI API Reference","text":"<p>The <code>cli.py</code> module provides the main command-line interface for RIDE CLI.</p>"},{"location":"api/cli/#classes","title":"Classes","text":""},{"location":"api/cli/#rideinteractive","title":"<code>RideInteractive</code>","text":"<p>The main class that handles the interactive CLI interface.</p> <pre><code>class RideInteractive:\n    def __init__(self)\n</code></pre>"},{"location":"api/cli/#attributes","title":"Attributes","text":"<ul> <li><code>dataframe</code>: pandas.DataFrame or None - The current working dataset</li> <li><code>file_path</code>: str or None - Path to the currently loaded file</li> <li><code>data_processor</code>: Prepup or None - Instance of the data processing utility</li> <li><code>term_font</code>: Figlet - Terminal font for ASCII art</li> <li><code>big_font</code>: Figlet - Large font for headers</li> </ul>"},{"location":"api/cli/#methods","title":"Methods","text":""},{"location":"api/cli/#display_section_headertitle-subtitlenone","title":"<code>display_section_header(title, subtitle=None)</code>","text":"<p>Displays a formatted section header that adjusts to screen size.</p> <p>Parameters: - <code>title</code>: str - Main title for the section - <code>subtitle</code>: str, optional - Additional description text</p> <p>Example: <pre><code>self.display_section_header(\n    \"Data Exploration\",\n    \"Perform statistical analysis and discover patterns in your data\"\n)\n</code></pre></p>"},{"location":"api/cli/#display_header","title":"<code>display_header()</code>","text":"<p>Displays the main application header with ASCII art logo.</p>"},{"location":"api/cli/#display_formatted_description","title":"<code>display_formatted_description()</code>","text":"<p>Displays a properly formatted description that adjusts to screen size.</p>"},{"location":"api/cli/#load_data","title":"<code>load_data()</code>","text":"<p>Interactive method to load datasets from files or pre-loaded options.</p> <p>Features: - Supports CSV, Excel (.xlsx, .xls), and Parquet files - Provides access to 5 pre-loaded datasets - Handles file loading errors gracefully</p>"},{"location":"api/cli/#inspect_data","title":"<code>inspect_data()</code>","text":"<p>Provides data inspection options including: 1. View features and data types 2. View dataset shape 3. Check missing values 4. View data sample 5. View summary statistics</p>"},{"location":"api/cli/#explore_data","title":"<code>explore_data()</code>","text":"<p>Offers statistical analysis options: 1. Feature correlation analysis 2. Check for normal distribution 3. Detect outliers 4. View skewness 5. View kurtosis 6. Check for imbalanced target variable</p>"},{"location":"api/cli/#visualize_data","title":"<code>visualize_data()</code>","text":"<p>Creates terminal-based visualizations: 1. Plot histogram 2. Plot scatter plot</p>"},{"location":"api/cli/#impute_missing_values","title":"<code>impute_missing_values()</code>","text":"<p>Handles missing values with multiple strategies: 1. Drop missing data 2. Impute with specific value 3. Impute with mean 4. Impute with median 5. Impute based on distribution 6. Forward fill strategy 7. Backward fill strategy 8. Nearest neighbors imputation</p>"},{"location":"api/cli/#standardize_features","title":"<code>standardize_features()</code>","text":"<p>Applies feature scaling and transformation methods.</p>"},{"location":"api/cli/#encode_features","title":"<code>encode_features()</code>","text":"<p>Encodes categorical variables using various methods.</p>"},{"location":"api/cli/#change_datatype","title":"<code>change_datatype()</code>","text":"<p>Converts column data types interactively.</p>"},{"location":"api/cli/#export_data","title":"<code>export_data()</code>","text":"<p>Exports data to various formats: - CSV (.csv) - Excel (.xlsx) - Parquet (.parquet)</p>"},{"location":"api/cli/#automl","title":"<code>automl()</code>","text":"<p>Runs AutoML to find the best model for classification or regression tasks.</p> <p>Parameters taken interactively: - Target column selection - Task type (classification/regression) - Output file path</p>"},{"location":"api/cli/#run","title":"<code>run()</code>","text":"<p>Main loop that runs the interactive interface.</p>"},{"location":"api/cli/#display_no_data_message","title":"<code>display_no_data_message()</code>","text":"<p>Displays a message when no dataset is loaded.</p>"},{"location":"api/cli/#functions","title":"Functions","text":""},{"location":"api/cli/#load_filefile_path","title":"<code>load_file(file_path)</code>","text":"<p>Loads a file based on its extension.</p> <p>Parameters: - <code>file_path</code>: str - Path to the file to load</p> <p>Returns: - pandas.DataFrame - Loaded dataset</p> <p>Raises: - ValueError: If file format is not supported</p> <p>Supported formats: - CSV (.csv) - Excel (.xlsx) - Parquet (.parquet)</p>"},{"location":"api/cli/#main","title":"<code>main()</code>","text":"<p>Main entry point for the CLI application.</p> <p>Features: - Sets up stdout encoding for UTF-8 - Parses command-line arguments - Initializes the interactive interface - Handles optional file loading from command line</p>"},{"location":"api/cli/#command-line-usage","title":"Command Line Usage","text":""},{"location":"api/cli/#basic-usage","title":"Basic Usage","text":"<pre><code># Start interactive mode\nride\n\n# Load a file directly\nride path/to/dataset.csv\n</code></pre>"},{"location":"api/cli/#arguments","title":"Arguments","text":"<ul> <li><code>file</code>: Optional positional argument - Path to dataset file to load on startup</li> </ul>"},{"location":"api/cli/#error-handling","title":"Error Handling","text":"<p>The CLI includes comprehensive error handling for: - File loading errors - Invalid user inputs - Data processing errors - Missing data issues - Invalid file formats</p>"},{"location":"api/cli/#color-coding","title":"Color Coding","text":"<p>The CLI uses the following color scheme: - Green: Success messages, headers - Red: Error messages - Yellow: Warning messages, section titles - Blue: Information, data values - Cyan: Decorative borders</p>"},{"location":"api/cli/#dependencies","title":"Dependencies","text":"<p>Required packages: - pandas - numpy - plotext - termcolor - pyfiglet - sklearn</p>"},{"location":"api/cli/#example-usage","title":"Example Usage","text":"<pre><code>from ride.cli import RideInteractive, main\n\n# Create interactive interface\napp = RideInteractive()\n\n# Load a dataset\napp.file_path = \"data/iris.csv\"\napp.dataframe = pd.read_csv(app.file_path)\n\n# Run the interface\napp.run()\n\n# Or use the main function\nif __name__ == \"__main__\":\n    main()\n</code></pre>"},{"location":"api/cli/#integration-with-other-modules","title":"Integration with Other Modules","text":"<p>The CLI integrates with: - <code>utils.Prepup</code>: For data processing operations - <code>automl_processor.AutoMLProcessor</code>: For automatic machine learning</p>"},{"location":"api/utils/","title":"Utils API Reference","text":"<p>The <code>utils.py</code> module provides data preprocessing and analysis utilities through the <code>Prepup</code> class.</p>"},{"location":"api/utils/#classes","title":"Classes","text":""},{"location":"api/utils/#prepup","title":"<code>Prepup</code>","text":"<p>Main class for data preprocessing and analysis operations.</p> <pre><code>class Prepup:\n    def __init__(self, dataframe)\n</code></pre>"},{"location":"api/utils/#parameters","title":"Parameters","text":"<ul> <li><code>dataframe</code>: pandas.DataFrame or None - The dataset to process</li> </ul>"},{"location":"api/utils/#methods","title":"Methods","text":""},{"location":"api/utils/#data-inspection-methods","title":"Data Inspection Methods","text":""},{"location":"api/utils/#features_available","title":"<code>features_available()</code>","text":"<p>Returns a list of features available in the dataframe.</p> <p>Returns: - pandas.Index - Column names</p>"},{"location":"api/utils/#dtype_features","title":"<code>dtype_features()</code>","text":"<p>Returns the data types of each feature in the dataset.</p> <p>Returns: - pandas.Series - Data types for each column</p>"},{"location":"api/utils/#missing_values_count","title":"<code>missing_values_count()</code>","text":"<p>Returns the number of missing values in each column.</p> <p>Returns: - pandas.Series - Count of missing values per column</p>"},{"location":"api/utils/#shape_data","title":"<code>shape_data()</code>","text":"<p>Returns the shape of the dataframe.</p> <p>Returns: - tuple - (rows, columns)</p>"},{"location":"api/utils/#visualization-methods","title":"Visualization Methods","text":""},{"location":"api/utils/#missing_plot","title":"<code>missing_plot()</code>","text":"<p>Creates a terminal-based bar plot showing missing values for each column.</p> <p>Features: - Uses plotext for terminal visualization - Only shows columns with missing values - Displays count and visual representation</p>"},{"location":"api/utils/#plot_histogram","title":"<code>plot_histogram()</code>","text":"<p>Creates an interactive histogram for a selected numerical column.</p> <p>Features: - Lists all numerical columns - Interactive column selection - Displays basic statistics (mean, median, std, min, max) - Terminal-based visualization using plotext</p>"},{"location":"api/utils/#plot_scatter","title":"<code>plot_scatter()</code>","text":"<p>Creates an interactive scatter plot for two selected numerical columns.</p> <p>Features: - Requires at least 2 numerical columns - Interactive column selection for X and Y axes - Shows correlation coefficient - Indicates correlation strength (weak/moderate/strong)</p>"},{"location":"api/utils/#statistical-analysis-methods","title":"Statistical Analysis Methods","text":""},{"location":"api/utils/#correlation_n","title":"<code>correlation_n()</code>","text":"<p>Analyzes correlations between numerical features.</p> <p>Features: - Calculates correlation matrix - Displays unique correlations (excluding self-correlations) - Shows correlation strength classification - Creates bar plot visualization for correlations - Handles large feature sets by showing top correlations</p>"},{"location":"api/utils/#check_nomral_distrubution","title":"<code>check_nomral_distrubution()</code>","text":"<p>Checks if features are normally distributed using Shapiro-Wilk test.</p> <p>Features: - Tests each numerical column - Reports p-values - Indicates normal vs non-normal distribution</p>"},{"location":"api/utils/#find_outliersk15","title":"<code>find_outliers(k=1.5)</code>","text":"<p>Detects outliers using the IQR method.</p> <p>Parameters: - <code>k</code>: float - IQR multiplier for outlier detection (default: 1.5)</p> <p>Features: - Uses interquartile range method - Reports outliers for each numerical column</p>"},{"location":"api/utils/#skewness","title":"<code>skewness()</code>","text":"<p>Calculates skewness for numerical features.</p> <p>Features: - Handles nullable integer types - Reports skewness values for each column - Includes error handling for edge cases</p>"},{"location":"api/utils/#kurtosis","title":"<code>kurtosis()</code>","text":"<p>Calculates kurtosis for numerical features.</p> <p>Features: - Similar to skewness method - Reports kurtosis values for each column - Handles data type conversions</p>"},{"location":"api/utils/#imbalanced_dataset","title":"<code>imbalanced_dataset()</code>","text":"<p>Analyzes class distribution for target variables.</p> <p>Features: - Interactive column selection - Visual distribution plot - Class imbalance detection and reporting - Calculates imbalance ratio</p>"},{"location":"api/utils/#data-transformation-methods","title":"Data Transformation Methods","text":""},{"location":"api/utils/#feature_encoding","title":"<code>feature_encoding()</code>","text":"<p>Provides various encoding options for categorical variables.</p> <p>Encoding Methods: 1. Label Encoding 2. One Hot Encoding 3. Ordinal Encoding</p> <p>Features: - Interactive column selection - Handles missing values - Saves encoded data to CSV - Updates the working dataframe</p>"},{"location":"api/utils/#data_type_conversion","title":"<code>data_type_conversion()</code>","text":"<p>Converts data types of columns using pandas native conversion.</p> <p>Supported Types: - String (object) - Integer (int8, int16, int32, int64) - Float (float16, float32, float64) - DateTime - Boolean</p> <p>Features: - Interactive column selection - Error handling for conversion issues - Preview of converted data - Option to update working dataframe</p>"},{"location":"api/utils/#feature_scaling","title":"<code>feature_scaling()</code>","text":"<p>Applies various scaling and transformation methods.</p> <p>Scaling Options: 1. Min-Max Scaler 2. Standard Scaler (Z-score) 3. Robust Scaler 4. Max Abs Scaler</p> <p>Transformation Options: 5. Quantile Transformer 6. Log Transformer 7. Reciprocal Transformation 8. Square Root Transformation</p> <p>Features: - Column selection with drop option - Handles edge cases (zeros, negatives) - Saves transformed data to CSV</p>"},{"location":"api/utils/#handle_missing_values","title":"<code>handle_missing_values()</code>","text":"<p>Handles missing values with multiple strategies.</p> <p>Imputation Methods: 1. Drop missing data 2. Impute with specific value 3. Impute with mean 4. Impute with median 5. Impute based on distribution 6. Forward fill strategy 7. Backward fill strategy 8. Nearest neighbors</p> <p>Features: - Interactive method selection - Saves imputed data to CSV - Creates backup in parquet format</p>"},{"location":"api/utils/#usage-examples","title":"Usage Examples","text":"<pre><code>import pandas as pd\nfrom ride.utils import Prepup\n\n# Load data\ndf = pd.read_csv('data.csv')\n\n# Initialize Prepup\nprepup = Prepup(df)\n\n# Inspect data\nprint(prepup.features_available())\nprint(prepup.shape_data())\n\n# Check for missing values\nprepup.missing_plot()\n\n# Analyze correlations\nprepup.correlation_n()\n\n# Check for normal distribution\nprepup.check_nomral_distrubution()\n\n# Encode categorical features\nprepup.feature_encoding()\n\n# Scale features\nprepup.feature_scaling()\n</code></pre>"},{"location":"api/utils/#dependencies","title":"Dependencies","text":"<ul> <li>pandas</li> <li>numpy</li> <li>plotext</li> <li>scipy</li> <li>sklearn</li> <li>termcolor</li> <li>pyfiglet</li> </ul>"},{"location":"api/utils/#error-handling","title":"Error Handling","text":"<p>The module includes comprehensive error handling for: - Data type mismatches - Missing value operations - Statistical calculations - File I/O operations - User input validation</p>"},{"location":"api/utils/#visual-output","title":"Visual Output","text":"<p>All visualizations use plotext for terminal-based graphics: - Bar charts for correlations and missing values - Histograms for distributions - Scatter plots for relationships - Theme: 'matrix' and 'dark' for better visibility</p>"},{"location":"contributing/development/","title":"Development Guide","text":"<p>This guide provides information for developers who want to contribute to RIDE CLI.</p>"},{"location":"contributing/development/#setting-up-development-environment","title":"Setting Up Development Environment","text":""},{"location":"contributing/development/#prerequisites","title":"Prerequisites","text":"<ul> <li>Python 3.8 or higher</li> <li>Git</li> <li>pip</li> <li>Virtual environment (venv or conda)</li> </ul>"},{"location":"contributing/development/#installation-for-development","title":"Installation for Development","text":"<ol> <li> <p>Clone the repository:    <pre><code>git clone https://github.com/sudhanshumukherjeexx/ride-cli.git\ncd ride-cli\n</code></pre></p> </li> <li> <p>Create and activate a virtual environment:    <pre><code># Using venv\npython -m venv ride-env\n\n# On Windows\nride-env\\Scripts\\activate\n\n# On macOS/Linux\nsource ride-env/bin/activate\n</code></pre></p> </li> <li> <p>Install development dependencies:    <pre><code>pip install -e \".[dev,docs]\"\n</code></pre></p> </li> </ol>"},{"location":"contributing/development/#project-structure","title":"Project Structure","text":"<pre><code>ride-cli/\n\u251c\u2500\u2500 ride/                   # Main package\n\u2502   \u251c\u2500\u2500 __init__.py         # Package initialization\n\u2502   \u251c\u2500\u2500 cli.py              # Command line interface\n\u2502   \u251c\u2500\u2500 utils.py            # Utility functions\n\u2502   \u2514\u2500\u2500 automl_processor.py # AutoML functionality\n\u251c\u2500\u2500 datasets/               # Default datasets\n\u251c\u2500\u2500 tests/                  # Test suite\n\u251c\u2500\u2500 docs/                   # Documentation\n\u251c\u2500\u2500 setup.py                # Package setup\n\u251c\u2500\u2500 requirements.txt        # Dependencies\n\u2514\u2500\u2500 README.md               # Project overview\n</code></pre>"},{"location":"contributing/development/#development-workflow","title":"Development Workflow","text":""},{"location":"contributing/development/#branching-strategy","title":"Branching Strategy","text":"<p>We use a simplified Git flow with the following branches: - <code>main</code>: Production-ready code - <code>develop</code>: Integration branch for features - <code>feature/*</code>: Feature branches</p> <p>For new contributions: 1. Create a feature branch from <code>develop</code> 2. Develop and test your changes 3. Submit a pull request to merge into <code>develop</code></p>"},{"location":"contributing/development/#coding-standards","title":"Coding Standards","text":"<p>We follow PEP 8 style guidelines for Python code. Please ensure your code adheres to these standards:</p> <ul> <li>Use 4 spaces for indentation (no tabs)</li> <li>Maximum line length of 79 characters for code</li> <li>Use meaningful variable and function names</li> <li>Add docstrings to all functions and classes</li> <li>Include type hints when appropriate</li> </ul>"},{"location":"contributing/development/#running-tests","title":"Running Tests","text":"<p>Run the test suite to ensure your changes don't break existing functionality:</p> <pre><code># Install test dependencies\npip install pytest pytest-cov\n\n# Run tests\npytest tests/\n\n# Run with coverage report\npytest --cov=ride tests/\n</code></pre>"},{"location":"contributing/development/#adding-new-features","title":"Adding New Features","text":"<p>When adding new features to RIDE CLI, please follow these guidelines:</p>"},{"location":"contributing/development/#1-plan-your-feature","title":"1. Plan Your Feature","text":"<ul> <li>Define the functionality clearly</li> <li>Consider how it integrates with existing features</li> <li>Determine the user interface (CLI options, menu items)</li> </ul>"},{"location":"contributing/development/#2-implementation","title":"2. Implementation","text":"<ul> <li>Follow the modular architecture</li> <li>Keep methods focused on single responsibilities</li> <li>Use appropriate error handling</li> <li>Add interactive elements consistent with existing UI</li> </ul>"},{"location":"contributing/development/#3-documentation","title":"3. Documentation","text":"<p>All new features should be documented: - Add docstrings to new classes and methods - Update user documentation in the <code>docs/</code> directory - Include examples of how to use the feature</p>"},{"location":"contributing/development/#4-testing","title":"4. Testing","text":"<ul> <li>Write unit tests for new functionality</li> <li>Include edge cases and error conditions</li> <li>Ensure tests pass on all supported platforms</li> </ul>"},{"location":"contributing/development/#building-documentation","title":"Building Documentation","text":"<p>We use Markdown for documentation. To build the documentation site:</p> <pre><code># Install dependencies\npip install mkdocs mkdocs-material\n\n# Serve documentation locally\nmkdocs serve\n\n# Build documentation site\nmkdocs build\n</code></pre>"},{"location":"contributing/development/#releasing","title":"Releasing","text":"<p>Check out the detailed release guide.</p>"},{"location":"contributing/development/#continuous-integration","title":"Continuous Integration","text":"<p>We use GitHub Actions for CI/CD. Workflows include:</p> <ul> <li>Running tests on multiple Python versions</li> <li>Linting with flake8</li> <li>Building documentation</li> <li>Publishing releases to PyPI</li> </ul>"},{"location":"contributing/development/#getting-help","title":"Getting Help","text":"<p>If you need help during development:</p> <ul> <li>Check the existing issues</li> <li>Join our Discord community</li> <li>Contact maintainers via email</li> </ul>"},{"location":"contributing/development/#best-practices","title":"Best Practices","text":""},{"location":"contributing/development/#performance-considerations","title":"Performance Considerations","text":"<ul> <li>Be mindful of memory usage with large datasets</li> <li>Use efficient pandas and numpy operations</li> <li>Consider the impact of new features on startup time</li> </ul>"},{"location":"contributing/development/#ui-design","title":"UI Design","text":"<ul> <li>Keep the terminal interface consistent</li> <li>Follow existing menu structure patterns</li> <li>Use color coding consistently</li> <li>Ensure graceful error handling</li> </ul>"},{"location":"contributing/development/#compatibility","title":"Compatibility","text":"<ul> <li>Test on multiple operating systems</li> <li>Ensure compatibility with supported Python versions</li> <li>Be careful with external dependencies</li> </ul>"},{"location":"contributing/development/#code-review-process","title":"Code Review Process","text":"<p>All contributions go through code review:</p> <ol> <li>Submit a pull request</li> <li>Automated tests run via GitHub Actions</li> <li>Code review by maintainers</li> <li>Address feedback and make necessary changes</li> <li>Final approval and merge</li> </ol>"},{"location":"contributing/development/#license","title":"License","text":"<p>By contributing to RIDE CLI, you agree that your contributions will be licensed under the project's MIT License.</p>"},{"location":"contributing/release/","title":"Release Process Guide","text":"<p>This document outlines the complete manual process for releasing new versions of RIDE CLI.</p>"},{"location":"contributing/release/#version-numbering","title":"Version Numbering","text":"<p>RIDE CLI follows Semantic Versioning (SemVer):</p> <ul> <li>MAJOR version (X.0.0): Incompatible API changes, major feature changes</li> <li>MINOR version (0.X.0): New functionality added in a backward compatible manner</li> <li>PATCH version (0.0.X): Backward compatible bug fixes</li> </ul>"},{"location":"contributing/release/#pre-release-checklist","title":"Pre-Release Checklist","text":"<p>Before starting the release process, verify:</p> <ul> <li>[ ] All tests pass (<code>pytest -v</code>)</li> <li>[ ] Documentation is up-to-date</li> <li>[ ] CHANGELOG.md is updated with all changes</li> <li>[ ] All GitHub issues for this milestone are closed or moved</li> <li>[ ] Code quality checks pass (<code>flake8</code>, <code>black</code>, <code>isort</code>)</li> <li>[ ] All dependencies are pinned to specific versions</li> </ul>"},{"location":"contributing/release/#step-1-update-version-numbers","title":"Step 1: Update Version Numbers","text":"<p>Manually update version numbers in these files:</p> <ol> <li> <p>ride/init.py:    <pre><code>__version__ = \"0.3.1\"  # Update to new version\n</code></pre></p> </li> <li> <p>setup.py:    <pre><code>version=\"0.3.1\",  # Update to new version\n</code></pre></p> </li> <li> <p>pyproject.toml:    <pre><code>version = \"0.3.1\"  # Update to new version\n</code></pre></p> </li> </ol>"},{"location":"contributing/release/#step-2-update-changelogmd","title":"Step 2: Update CHANGELOG.md","text":"<p>Add a new entry at the top of the CHANGELOG.md file:</p> <pre><code>## [0.3.1] - YYYY-MM-DD\n\n### Added\n- List of new features\n\n### Changed\n- List of changes in existing functionality\n\n### Deprecated\n- List of features that will be removed in future releases\n\n### Removed\n- List of removed features\n\n### Fixed\n- List of bug fixes\n\n### Security\n- List of security fixes\n</code></pre> <p>Make sure to: - Use today's date - Group changes by type - Be specific about changes - Reference GitHub issues when applicable (e.g., \"Fixed crash when loading CSV files (#123)\")</p>"},{"location":"contributing/release/#step-3-commit-version-changes","title":"Step 3: Commit Version Changes","text":"<pre><code># Stage all changed files\ngit add ride/__init__.py setup.py pyproject.toml CHANGELOG.md\n\n# Create a commit\ngit commit -m \"Release v0.3.1\"\n</code></pre>"},{"location":"contributing/release/#step-4-create-a-git-tag","title":"Step 4: Create a Git Tag","text":"<pre><code># Create an annotated tag\ngit tag -a v0.3.1 -m \"Release v0.3.1\"\n</code></pre>"},{"location":"contributing/release/#step-5-push-to-github","title":"Step 5: Push to GitHub","text":"<pre><code># Push the commit\ngit push origin main\n\n# Push the tag\ngit push origin v0.3.1\n</code></pre>"},{"location":"contributing/release/#create-github-release","title":"Create GitHub Release","text":"<ol> <li>Go to https://github.com/sudhanshumukherjeexx/ride-cli/releases</li> <li>Click \"Draft a new release\"</li> <li>Select the tag you created (v0.3.1)</li> <li>Title: \"RIDE CLI v0.3.1\"</li> <li>Description: Copy release notes from CHANGELOG.md</li> <li>Attach the built packages from the <code>dist/</code> directory</li> <li>Click \"Publish release\"</li> </ol>"},{"location":"contributing/release/#update-documentation","title":"Update Documentation","text":"<p>If using GitHub Pages with MkDocs:</p> <pre><code># Build and deploy documentation\nmkdocs gh-deploy --force\n</code></pre> <p>If manually deploying documentation, update the documentation site with:</p> <pre><code># Build documentation\n\nmkdocs build # Deploy to your documentation hosting service\n</code></pre>"},{"location":"contributing/release/#post-release","title":"Post-Release","text":"<ol> <li>Verify the package is available on PyPI: https://pypi.org/project/ride-cli/</li> <li>Verify documentation is updated</li> <li>Update project roadmap if necessary</li> <li>Create new milestone for next version on GitHub (if applicable)</li> </ol>"},{"location":"contributing/release/#github-release-issues","title":"GitHub Release Issues","text":"<p>Problem: Tag already exists Solution: Delete the existing tag and create a new one <pre><code>git tag -d v0.3.1\ngit push origin :refs/tags/v0.3.1\ngit tag -a v0.3.1 -m \"Release v0.3.1\"\ngit push origin v0.3.1\n</code></pre></p> <p>Problem: Upload fails Solution: Ensure your GitHub token has appropriate permissions</p>"},{"location":"contributing/release/#documentation","title":"Documentation","text":"<p>For each release, update:</p> <ol> <li>Installation instructions with new version</li> <li>API documentation for changed interfaces</li> <li>User guides for new features</li> <li>Migration guides for breaking changes</li> </ol>"},{"location":"contributing/release/#quick-release-reference","title":"Quick Release Reference","text":"<p>For experienced maintainers, here's a quick reference:</p> <pre><code># 1. Update versions:\n# - ride/__init__.py\n# - setup.py\n# - pyproject.toml\n\n# 2. Update CHANGELOG.md\n\n# 3. Commit and tag\ngit add .\ngit commit -m \"Release v0.3.1\"\ngit tag -a v0.3.1 -m \"Release v0.3.1\"\n\n# 4. Push\ngit push origin main\ngit push origin v0.3.1\n\n\n# 5. Create GitHub release\ngit push origin main\ngit push origin v0.3.1\n\n\n# 6. Deploy docs\nmkdocs gh-deploy --force\n</code></pre>"},{"location":"contributing/testing/","title":"Testing Guide","text":"<p>This guide describes how to run and develop tests for the RIDE CLI project.</p>"},{"location":"contributing/testing/#overview","title":"Overview","text":"<p>RIDE CLI uses pytest for testing various components of the application:</p> <ul> <li>Basic Tests: Ensures the package can be imported correctly</li> <li>CLI Tests: Tests the command-line interface functionality</li> <li>Utils Tests: Validates the data processing utilities</li> <li>AutoML Tests: Verifies machine learning pipeline operations</li> </ul>"},{"location":"contributing/testing/#running-tests","title":"Running Tests","text":"<p>To run the full test suite:</p> <pre><code># Install testing dependencies\npip install pytest pytest-cov\n\n# Run all tests\npytest\n\n# Run with coverage report\npytest --cov=ride\n</code></pre> <p>To run specific test files:</p> <pre><code># Run specific test modules\npytest tests/test_basic.py\npytest tests/test_cli.py\npytest tests/test_utils.py\npytest tests/test_automl.py\n</code></pre>"},{"location":"contributing/testing/#test-structure","title":"Test Structure","text":"<p>Each module in RIDE CLI has corresponding test files:</p> Module Test File Tests Package <code>test_basic.py</code> Basic import functionality, version check CLI <code>test_cli.py</code> Interface initialization, file loading, integration Utils <code>test_utils.py</code> Data processing utilities, statistics functions AutoML <code>test_automl.py</code> ML model training and evaluation"},{"location":"contributing/testing/#writing-new-tests","title":"Writing New Tests","text":"<p>When adding new features to RIDE CLI, please include corresponding tests:</p> <ol> <li>Add tests to the appropriate test file or create a new one if needed</li> <li>Use pytest fixtures for setting up test data</li> <li>Follow the existing naming conventions (<code>test_*</code>)</li> <li>Document test functions with docstrings</li> </ol> <p>Example test function:</p> <pre><code>def test_new_feature(sample_data):\n    \"\"\"Test description explaining what is being tested\"\"\"\n    # Test setup\n    processor = SomeProcessor(sample_data)\n\n    # Execute feature\n    result = processor.new_feature()\n\n    # Assert expected outcomes\n    assert result is not None\n    assert isinstance(result, ExpectedType)\n</code></pre>"},{"location":"contributing/testing/#test-fixtures","title":"Test Fixtures","text":"<p>The test suite uses fixtures to provide common test data:</p> <ul> <li><code>sample_df</code>: Basic dataframe with numeric, categorical, and missing values</li> <li><code>sample_classification_data</code>: Dataset for testing classification models</li> <li><code>sample_regression_data</code>: Dataset for testing regression models</li> </ul> <p>Use these fixtures in your tests to maintain consistency.</p>"},{"location":"contributing/testing/#continuous-integration","title":"Continuous Integration","text":"<p>Tests are automatically run on every pull request and push to the main branch through GitHub Actions. The CI pipeline:</p> <ol> <li>Sets up Python environment</li> <li>Installs dependencies</li> <li>Runs tests with coverage reporting</li> <li>Fails if tests don't pass or coverage drops below threshold</li> </ol>"},{"location":"getting-started/installation/","title":"Installation","text":""},{"location":"getting-started/installation/#system-requirements","title":"System Requirements","text":"<p>RIDE CLI supports Python 3.8+ and runs on: - \ud83d\udc27 Linux - \ud83c\udf4e macOS - \ud83e\ude9f Windows</p>"},{"location":"getting-started/installation/#installation-methods","title":"Installation Methods","text":""},{"location":"getting-started/installation/#using-pip-recommended","title":"Using pip (Recommended)","text":"<pre><code>pip install ride-cli\n</code></pre>"},{"location":"getting-started/installation/#from-source","title":"From Source","text":"<pre><code>git clone https://github.com/sudhanshumukherjeexx/ride-cli.git\ncd ride-cli\npip install -e .\n</code></pre>"},{"location":"getting-started/installation/#development-installation","title":"Development Installation","text":"<p>For contributors:</p> <pre><code>git clone https://github.com/sudhanshumukherjeexx/ride-cli.git\ncd ride-cli\npip install -e \".[dev,docs]\"\n</code></pre>"},{"location":"getting-started/installation/#virtual-environment-recommended","title":"Virtual Environment (Recommended)","text":"<p>We recommend using a virtual environment to avoid dependency conflicts:</p>"},{"location":"getting-started/installation/#linuxmacos","title":"Linux/macOS","text":"<pre><code>python3 -m venv ride-env\nsource ride-env/bin/activate\npip install ride-cli\n</code></pre>"},{"location":"getting-started/installation/#windows","title":"Windows","text":"<pre><code>python -m venv ride-env\nride-env\\Scripts\\activate\npip install ride-cli\n</code></pre>"},{"location":"getting-started/installation/#verifying-installation","title":"Verifying Installation","text":"<p>After installation, verify RIDE is working:</p> <pre><code>ride --version\n</code></pre>"},{"location":"getting-started/installation/#dependencies","title":"Dependencies","text":"<p>RIDE CLI automatically installs these key dependencies: - pandas - numpy - scikit-learn - matplotlib - plotext - termcolor - pyfiglet</p>"},{"location":"getting-started/installation/#troubleshooting","title":"Troubleshooting","text":""},{"location":"getting-started/installation/#common-issues","title":"Common Issues","text":"<ul> <li>Command not found: Make sure your Python Scripts directory is in PATH</li> <li>Permission denied: Use <code>--user</code> flag or run in a virtual environment</li> <li>Dependency conflicts: Create a fresh virtual environment</li> </ul>"},{"location":"getting-started/installation/#getting-help","title":"Getting Help","text":"<p>If you encounter issues: - Check the GitHub Issues - Create a new issue with your error message</p>"},{"location":"getting-started/quickstart/","title":"Quick Start Guide","text":"<p>Get started with RIDE CLI in minutes!</p>"},{"location":"getting-started/quickstart/#basic-usage","title":"Basic Usage","text":""},{"location":"getting-started/quickstart/#1-launch-ride","title":"1. Launch RIDE","text":"<pre><code>ride\n</code></pre> <p>Or load a dataset directly:</p> <pre><code>ride your-dataset.csv\n</code></pre> <p>This opens the interactive interface:</p> <pre><code>===============================================================================\n\n    8888888b.  8888888 8888888b.  8888888888      .d8888b.  888      8888888  \n    888   Y88b   888   888  \"Y88b 888            d88P  Y88b 888        888    \n    888    888   888   888    888 888            888    888 888        888    \n    888   d88P   888   888    888 8888888        888        888        888    \n    8888888P\"    888   888    888 888            888        888        888    \n    888 T88b     888   888    888 888            888    888 888        888    \n    888  T88b    888   888  .d88P 888            Y88b  d88P 888        888    \n    888   T88b 8888888 8888888P\"  8888888888      \"Y8888P\"  88888888 8888888  \n\n===============================================================================\n\nRIDE: Rapid Insights Data Engine\n\nRIDE is a free open-source toolkit that lets you perform data analysis\nwithout writing a single line of code and minimal intervention.\n\n===============================================================================\n\nMain Menu:\n\n1. Load Dataset\n2. Inspect Data\n3. Change Data Type\n4. Explore Data\n5. Visualize Data\n6. Impute Missing Values\n7. Feature Encoding\n8. Feature Scaling and Transformation\n9. Export Data\n10. AutoML (Train &amp; Evaluate Models)\n\n'$' Export Data (saves current state)\n'exit': Exit RIDE CLI\n\nEnter your choice (1-10, $, exit):\n</code></pre>"},{"location":"getting-started/quickstart/#2-load-your-data","title":"2. Load Your Data","text":"<p>Select option 1 to load your dataset:</p> <pre><code>Enter your choice (1-10, $, exit): 1\n\nOptions:\n1. Load your own data\n2. Load default data (Pre-loaded)\n0. Back to main menu\n\nEnter your choice (0-2): 1\n\nEnter the path to your dataset file (CSV, Excel, Parquet): data/iris.csv\n\nSuccess! Dataset loaded with 150 rows and 5 columns.\n\nPreview of the first 5 rows:\n   sepal_length  sepal_width  petal_length  petal_width species\n0           5.1          3.5           1.4          0.2  setosa\n1           4.9          3.0           1.4          0.2  setosa\n2           4.7          3.2           1.3          0.2  setosa\n3           4.6          3.1           1.5          0.2  setosa\n4           5.0          3.6           1.4          0.2  setosa\n</code></pre>"},{"location":"getting-started/quickstart/#default-datasets-available","title":"Default Datasets Available","text":"<p>If you choose option 2, you can select from these pre-loaded datasets: - Ames Housing: House prices with 82 features - Camera Dataset: Digital camera specifications - Fish: Fish species measurements - Penguins: Palmer Penguins dataset - Titanic: Passenger survival data</p>"},{"location":"getting-started/quickstart/#3-inspect-your-data","title":"3. Inspect Your Data","text":"<p>Use option 2 to explore your dataset structure:</p> <pre><code>Enter your choice (1-10, $, exit): 2\n\nInspection Options:\n1. View features and data types\n2. View dataset shape\n3. Check missing values\n4. View data sample\n5. View summary statistics\n6. Back to main menu\n\nEnter your choice (1-6): 1\n\nFeatures available in the dataset:\nIndex(['sepal_length', 'sepal_width', 'petal_length', 'petal_width', 'species'], dtype='object')\n\nData types of features:\nsepal_length     float64\nsepal_width      float64\npetal_length     float64\npetal_width      float64\nspecies           object\ndtype: object\n</code></pre>"},{"location":"getting-started/quickstart/#4-change-data-types","title":"4. Change Data Types","text":"<p>Convert column data types with option 3:</p> <pre><code>Enter your choice (1-10, $, exit): 3\n\nColumns available for data type conversion:\n--------------------------------------------------\n#   Column Name               Current Type     Sample Values\n--------------------------------------------------\n1   sepal_length              float64         5.1, 4.9, 4.7\n2   sepal_width               float64         3.5, 3.0, 3.2\n3   species                   object          setosa, setosa, setosa\n--------------------------------------------------\n\nSelect data type:\n1. String (object)\n2. Integer (int8)\n3. Integer (int64)\n4. Float (float64)\n5. DateTime\n6. Boolean\n</code></pre>"},{"location":"getting-started/quickstart/#5-explore-your-data","title":"5. Explore Your Data","text":"<p>Use option 4 for statistical analysis:</p> <pre><code>Enter your choice (1-10, $, exit): 4\n\nExploration Options:\n1. Feature correlation analysis\n2. Check for normal distribution\n3. Detect outliers\n4. View skewness\n5. View kurtosis\n6. Check for imbalanced target variable\n7. Back to main menu\n\nEnter your choice (1-7): 1\n\nTop Correlations (excluding self-correlations):\n------------------------------------------------------------\nFeature Pair                    Correlation     Strength\n------------------------------------------------------------\npetal_length-petal_width         0.963         Strong\nsepal_length-petal_length        0.872         Strong\nsepal_length-petal_width         0.818         Strong\n------------------------------------------------------------\n</code></pre>"},{"location":"getting-started/quickstart/#6-visualize-data","title":"6. Visualize Data","text":"<p>Create terminal-based visualizations with option 5:</p> <pre><code>Enter your choice (1-10, $, exit): 5\n\nVisualization Options:\n1. Plot histogram\n2. Plot scatter plot\n3. Back to main menu\n\nEnter your choice (1-3): 1\n\nAvailable numerical columns for histogram:\n--------------------------------------------------\n1. sepal_length\n2. sepal_width\n3. petal_length\n4. petal_width\n--------------------------------------------------\n\nEnter the column number to plot histogram: 1\n\nPlotting histogram for: sepal_length\n[Terminal-based histogram appears]\n\nStatistics for sepal_length:\nMean: 5.84\nMedian: 5.80\nStd Dev: 0.83\nMin: 4.30\nMax: 7.90\n</code></pre>"},{"location":"getting-started/quickstart/#7-handle-missing-values","title":"7. Handle Missing Values","text":"<p>Impute missing data with option 6:</p> <pre><code>Enter your choice (1-10, $, exit): 6\n\nChoice Available to Impute Missing Data:\n1. [Press 1] Drop Missing Data\n2. [Press 2] Impute Missing Data with Specific Value\n3. [Press 3] Impute Missing Data with Mean\n4. [Press 4] Impute Missing Data with Median\n5. [Press 5] Impute Missing Data based on Distribution\n6. [Press 6] Impute Missing Data with Fill Forward Strategy\n7. [Press 7] Impute Missing Data with Backward Fill Strategy\n8. [Press 8] Impute Missing Data with Nearest Neighbours\n\nEnter your choice: 3\n\nEnter path to save Imputed data: data/imputed_data.csv\nMissing Data Imputed and saved successfully\n</code></pre>"},{"location":"getting-started/quickstart/#8-feature-encoding","title":"8. Feature Encoding","text":"<p>Transform categorical variables with option 7:</p> <pre><code>Enter your choice (1-10, $, exit): 7\n\nCategorical columns available:\n--------------------------------------------------------\n#   Column Name        Data Type    Unique Values    Sample Values\n--------------------------------------------------------\n1   species           object       3                setosa, versicolor...\n--------------------------------------------------------\n\nEncoding Methods:\n1. Label Encoding - Maps each unique value to a number\n2. One Hot Encoding - Creates binary columns for each category\n3. Ordinal Encoding - Maps values to ordered integers\n4. Exit and return to main menu\n\nSelect encoding method (1-4): 1\n\nMapping for column 'species':\n  setosa \u2192 0\n  versicolor \u2192 1\n  virginica \u2192 2\n</code></pre>"},{"location":"getting-started/quickstart/#9-feature-scaling","title":"9. Feature Scaling","text":"<p>Scale numerical features with option 8:</p> <pre><code>Enter your choice (1-10, $, exit): 8\n\nAvailable Options:\n\n=== SCALING OPTIONS ===\n1. Min-Max Scaler [Scales features to a range of [0,1]]\n2. Standard Scaler (Z-score) [Scales to mean=0, std=1]\n3. Robust Scaler [Recommended if outliers are present]\n4. Max Abs Scaler [Scales by dividing by the maximum absolute value]\n\n=== TRANSFORMATION OPTIONS ===\n5. Quantile Transformer [Maps to uniform or normal distribution]\n6. Log Transformer [Natural logarithm transformation]\n7. Reciprocal Transformation [1/x transformation]\n8. Square Root Transformation [\u221ax transformation]\n9. Exit and return to main menu\n\nEnter your choice (1-9): 2\n\nEnter path to save normalized/transformed data: data/scaled_data.csv\nFeatures scaled and saved successfully\n</code></pre>"},{"location":"getting-started/quickstart/#10-run-automl","title":"10. Run AutoML","text":"<p>Automatically find the best model with option 10:</p> <pre><code>Enter your choice (1-10, $, exit): 10\n\nAvailable columns:\n1. sepal_length\n2. sepal_width\n3. petal_length\n4. petal_width\n5. species\n\nEnter the number of the target column: 5\n\nSelect task type:\n1. Classification (target variable has discrete classes)\n2. Regression (target variable has continuous values)\n\nEnter your choice (1-2): 1\n\n\ud83e\udd16 AutoML Model Selection \ud83e\udd16\nTask Type: Classification\nTarget Column: species\n\n\ud83d\udd0d Preprocessing: Missing Value Analysis\nInitial Missing Values:\n(None found)\n\n\ud83d\udd00 Data Split:\nTraining set: 120 samples\nTesting set: 30 samples\n\n\ud83d\udd0d Evaluating Random Forest Classifier...\n\u2713 Completed - Balanced Accuracy: 1.0000\n\n[More models evaluated...]\n\n\ud83d\udcca Classification Model Comparison:\n                    Balanced Accuracy  F1 Score  Accuracy\nModel               \nRandom Forest                   1.000     1.000     1.000\nExtra Trees                     1.000     1.000     1.000\nLightGBM                        1.000     1.000     1.000\nXGBoost                        0.967     0.967     0.967\nLogistic Regression            0.967     0.967     0.967\n\nEnter the full path to save the AutoML results: results/automl_results.csv\n\ud83d\udcbe Results saved to results/automl_results.csv\n</code></pre>"},{"location":"getting-started/quickstart/#11-export-data","title":"11. Export Data","text":"<p>Save your processed data with option 9 or '$':</p> <pre><code>Enter your choice (1-10, $, exit): 9\n\nEnter the path to save the file: processed_data\n\nExport Format Options:\n1. CSV (.csv)\n2. Excel (.xlsx)\n3. Parquet (.parquet)\n\nChoose export format (1-3): 1\n\nData exported successfully to processed_data.csv\n</code></pre>"},{"location":"getting-started/quickstart/#tips-and-tricks","title":"Tips and Tricks","text":"<ul> <li>Use the '$' shortcut to quickly export your current dataset</li> <li>Press 'exit' at any time to quit RIDE CLI</li> <li>All visualizations are terminal-based using plotext</li> <li>You can load files directly when starting RIDE: <code>ride your-data.csv</code></li> <li>Default datasets are available if you want to explore without your own data</li> <li>All operations preserve your original data; modifications are saved to new files</li> </ul>"},{"location":"getting-started/quickstart/#common-workflows","title":"Common Workflows","text":""},{"location":"getting-started/quickstart/#data-analysis-workflow","title":"Data Analysis Workflow","text":"<ol> <li>Load dataset</li> <li>Inspect data types and missing values</li> <li>Explore statistical properties</li> <li>Visualize distributions</li> <li>Handle missing values</li> <li>Encode categorical features</li> <li>Scale numerical features</li> <li>Export processed data</li> </ol>"},{"location":"getting-started/quickstart/#machine-learning-workflow","title":"Machine Learning Workflow","text":"<ol> <li>Load dataset</li> <li>Preprocess data (missing values, encoding, scaling)</li> <li>Run AutoML to find best model</li> <li>Export results for further analysis</li> </ol>"},{"location":"getting-started/quickstart/#need-help","title":"Need Help?","text":"<ul> <li>Check the User Guide for detailed instructions</li> <li>Report issues on GitHub</li> <li>Explore the [API Reference]for advanced usage:<ul> <li>CLI Module Reference</li> <li>Utils Module Reference</li> <li>AutoML Processor Reference</li> </ul> </li> </ul>"},{"location":"user-guide/interface/","title":"RIDE CLI Interface Guide","text":"<p>RIDE CLI provides an intuitive, menu-driven interface for data analysis. This guide covers all interface elements and navigation.</p>"},{"location":"user-guide/interface/#interface-overview","title":"Interface Overview","text":""},{"location":"user-guide/interface/#start-screen","title":"Start Screen","text":"<p>When you launch RIDE CLI, you'll see:</p> <pre><code>===============================================================================\n\n    8888888b.  8888888 8888888b.  8888888888      .d8888b.  888      8888888  \n    888   Y88b   888   888  \"Y88b 888            d88P  Y88b 888        888    \n    888    888   888   888    888 888            888    888 888        888    \n    888   d88P   888   888    888 8888888        888        888        888    \n    8888888P\"    888   888    888 888            888        888        888    \n    888 T88b     888   888    888 888            888    888 888        888    \n    888  T88b    888   888  .d88P 888            Y88b  d88P 888        888    \n    888   T88b 8888888 8888888P\"  8888888888      \"Y8888P\"  88888888 8888888  \n\n===============================================================================\n\nRIDE: Rapid Insights Data Engine\n\nRIDE is a free open-source toolkit that lets you perform data analysis\nwithout writing a single line of code and minimal intervention.\n\n===============================================================================\n</code></pre>"},{"location":"user-guide/interface/#main-menu","title":"Main Menu","text":"<p>The main menu provides access to all features:</p> <pre><code>Main Menu:\n\n1. Load Dataset\n2. Inspect Data\n3. Change Data Type\n4. Explore Data\n5. Visualize Data\n6. Impute Missing Values\n7. Feature Encoding\n8. Feature Scaling and Transformation\n9. Export Data\n10. AutoML (Train &amp; Evaluate Models)\n\n'$' Export Data (saves current state)\n'exit': Exit RIDE CLI\n\nEnter your choice (1-10, $, exit):\n</code></pre>"},{"location":"user-guide/interface/#navigation","title":"Navigation","text":""},{"location":"user-guide/interface/#menu-navigation","title":"Menu Navigation","text":"<ul> <li>Enter the number (1-10) to select an option</li> <li>Type '$' for quick export</li> <li>Type 'exit' to quit the application</li> <li>Press Enter after each selection</li> </ul>"},{"location":"user-guide/interface/#submenu-navigation","title":"Submenu Navigation","text":"<ul> <li>Each main option has its own submenu</li> <li>Navigate back to the main menu by selecting the \"Back\" option</li> <li>Most submenus are numbered similarly to the main menu</li> </ul>"},{"location":"user-guide/interface/#section-headers","title":"Section Headers","text":"<p>RIDE CLI uses dynamic section headers that adapt to your terminal size:</p> <pre><code>\u2554\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2557\n\u2551                               Load Dataset                                  \u2551\n\u2551 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2551\n\u2551           Import your data from CSV, Excel, or Parquet files                \u2551\n\u255a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u255d\n\nCurrent dataset: iris.csv\nShape: 150 rows \u00d7 5 columns\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n</code></pre>"},{"location":"user-guide/interface/#menu-options-detail","title":"Menu Options Detail","text":""},{"location":"user-guide/interface/#1-load-dataset-menu","title":"1. Load Dataset Menu","text":"<pre><code>Options:\n1. Load your own data\n2. Load default data (Pre-loaded)\n0. Back to main menu\n\nEnter your choice (0-2):\n</code></pre> <p>When loading default data: <pre><code>\ud83d\udcca Default Datasets Available:\n--------------------------------------------------------------------------------\n1. ames_housing.csv\n   House prices in Ames, Iowa with 82 features about property characteristics.\n\n2. camera_dataset.csv\n   Digital camera specifications including resolution, zoom, dimensions.\n\n3. Fish.csv\n   Fish species measurements including weight, length, height, and width.\n\n4. penguins.csv\n   Palmer Penguins dataset with penguin species measurements.\n\n5. titanic.csv\n   Titanic passengers data with survival information and demographics.\n--------------------------------------------------------------------------------\n0. Back to dataset loading options\n\nSelect a dataset (0-5):\n</code></pre></p>"},{"location":"user-guide/interface/#2-inspect-data-menu","title":"2. Inspect Data Menu","text":"<pre><code>Inspection Options:\n1. View features and data types\n2. View dataset shape\n3. Check missing values\n4. View data sample\n5. View summary statistics\n6. Back to main menu\n\nEnter your choice (1-6):\n</code></pre>"},{"location":"user-guide/interface/#3-data-type-conversion","title":"3. Data Type Conversion","text":"<p>Shows columns with interactive selection: <pre><code>Columns available for data type conversion:\n-----------------------------------------------------------------------------------\n#   Column Name                    Current Type    Sample Values\n-----------------------------------------------------------------------------------\n1   sepal_length                   float64        5.1, 4.9, 4.7\n2   sepal_width                    float64        3.5, 3.0, 3.2\n3   species                        object         setosa, setosa, setosa\n-----------------------------------------------------------------------------------\n\nSelect columns to convert:\n(Enter column numbers separated by commas)\n</code></pre></p>"},{"location":"user-guide/interface/#4-explore-data-menu","title":"4. Explore Data Menu","text":"<pre><code>Exploration Options:\n1. Feature correlation analysis\n2. Check for normal distribution\n3. Detect outliers\n4. View skewness\n5. View kurtosis\n6. Check for imbalanced target variable\n7. Back to main menu\n\nEnter your choice (1-7):\n</code></pre>"},{"location":"user-guide/interface/#5-visualize-data-menu","title":"5. Visualize Data Menu","text":"<pre><code>Visualization Options:\n1. Plot histogram\n2. Plot scatter plot\n3. Back to main menu\n\nEnter your choice (1-3):\n</code></pre>"},{"location":"user-guide/interface/#6-impute-missing-values","title":"6. Impute Missing Values","text":"<pre><code>Choice Available to Impute Missing Data:\n\n1. [Press 1] Drop Missing Data.\n2. [Press 2] Impute Missing Data with Specific Value.\n3. [Press 3] Impute Missing Data with Mean.\n4. [Press 4] Impute Missing Data with Median.\n5. [Press 5] Impute Missing Data based on Distribution of each Feature.\n6. [Press 6] Impute Missing Data with Fill Forward Strategy.\n7. [Press 7] Impute Missing Data with Backward Fill Strategy.\n8. [Press 8] Impute Missing Data with Nearest Neighbours.\n\nEnter your choice:\n</code></pre>"},{"location":"user-guide/interface/#7-feature-encoding-menu","title":"7. Feature Encoding Menu","text":"<pre><code>Categorical columns available in the dataset:\n--------------------------------------------------------------------------------\n#   Column Name                    Data Type    Unique Values    Sample Values\n--------------------------------------------------------------------------------\n1   species                        object       3                setosa, versi...\n--------------------------------------------------------------------------------\n\nEncoding Methods:\n1. Label Encoding - Maps each unique value to a number\n2. One Hot Encoding - Creates binary columns for each category\n3. Ordinal Encoding - Maps values to ordered integers based on specified order\n4. Exit and return to main menu\n\nSelect encoding method (1-4):\n</code></pre>"},{"location":"user-guide/interface/#8-feature-scaling-menu","title":"8. Feature Scaling Menu","text":"<pre><code>Available Options:\n\n=== SCALING OPTIONS ===\n1. Min-Max Scaler [Scales features to a range of [0,1]]\n2. Standard Scaler (Z-score) [Scales to mean=0, std=1]\n3. Robust Scaler [Recommended if outliers are present]\n4. Max Abs Scaler [Scales by dividing by the maximum absolute value]\n\n=== TRANSFORMATION OPTIONS ===\n5. Quantile Transformer [Maps to uniform or normal distribution]\n6. Log Transformer [Natural logarithm transformation]\n7. Reciprocal Transformation [1/x transformation]\n8. Square Root Transformation [\u221ax transformation]\n=============================================================================================\n9. Exit and return to main menu\n\nEnter your choice (1-9):\n</code></pre>"},{"location":"user-guide/interface/#9-export-data","title":"9. Export Data","text":"<pre><code>Enter the path to save the file: \n\nExport Format Options:\n1. CSV (.csv)\n2. Excel (.xlsx)\n3. Parquet (.parquet)\n\nChoose export format (1-3):\n</code></pre>"},{"location":"user-guide/interface/#10-automl-interface","title":"10. AutoML Interface","text":"<pre><code>Available columns:\n1. sepal_length\n2. sepal_width\n3. petal_length\n4. petal_width\n5. species\n\nEnter the number of the target column:\n\nSelect task type:\n1. Classification (target variable has discrete classes)\n2. Regression (target variable has continuous values)\n\nEnter your choice (1-2):\n</code></pre>"},{"location":"user-guide/interface/#visual-elements","title":"Visual Elements","text":""},{"location":"user-guide/interface/#color-coding","title":"Color Coding","text":"<p>RIDE CLI uses colors to enhance readability:</p> <ul> <li>\ud83d\udfe2 Green: Success messages, headers</li> <li>\ud83d\udd34 Red: Error messages, warnings</li> <li>\ud83d\udfe1 Yellow: Important notices, section titles</li> <li>\ud83d\udd35 Blue: Information, positive correlations</li> <li>\u26aa White: Standard text</li> <li>\ud83d\udfe6 Cyan: Borders, decorative elements</li> </ul>"},{"location":"user-guide/interface/#progress-indicators","title":"Progress Indicators","text":"<p>During AutoML and data processing: <pre><code>\ud83d\udd0d Preprocessing: Missing Value Analysis\n\ud83d\udd00 Data Split:\n\ud83d\udd0d Evaluating Random Forest Classifier...\n\u2713 Completed - Balanced Accuracy: 1.0000\n</code></pre></p>"},{"location":"user-guide/interface/#tables-and-data-display","title":"Tables and Data Display","text":"<p>Data is displayed in formatted tables: <pre><code>Top Correlations (excluding self-correlations):\n------------------------------------------------------------\nFeature Pair                    Correlation     Strength\n------------------------------------------------------------\npetal_length-petal_width         0.963         Strong\nsepal_length-petal_length        0.872         Strong\nsepal_length-petal_width         0.818         Strong\n------------------------------------------------------------\n</code></pre></p>"},{"location":"user-guide/interface/#visualizations","title":"Visualizations","text":"<p>Terminal-based plots using plotext: - Histograms with ASCII characters - Scatter plots with dots - Bar charts for correlations - Missing value visualizations</p> <p>Example histogram: <pre><code>Histogram: sepal_length\n\n    \u2593\u2593\u2593\n    \u2593\u2593\u2593\n    \u2593\u2593\u2593    \u2593\u2593\u2593\n    \u2593\u2593\u2593    \u2593\u2593\u2593    \u2593\u2593\u2593\n    \u2593\u2593\u2593    \u2593\u2593\u2593    \u2593\u2593\u2593\n    \u2593\u2593\u2593    \u2593\u2593\u2593    \u2593\u2593\u2593    \u2593\u2593\u2593\n    \u2593\u2593\u2593    \u2593\u2593\u2593    \u2593\u2593\u2593    \u2593\u2593\u2593    \u2593\u2593\u2593\n    \u2593\u2593\u2593    \u2593\u2593\u2593    \u2593\u2593\u2593    \u2593\u2593\u2593    \u2593\u2593\u2593\n  \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\n     4.3    5.1    5.9    6.7    7.5\n</code></pre></p>"},{"location":"user-guide/interface/#input-handling","title":"Input Handling","text":""},{"location":"user-guide/interface/#text-input","title":"Text Input","text":"<ul> <li>File paths: Can use relative or absolute paths</li> <li>Column selection: Enter numbers or \"all\"</li> <li>Yes/No questions: Accept 'y', 'n', 'yes', 'no' (case-insensitive)</li> </ul>"},{"location":"user-guide/interface/#numeric-input","title":"Numeric Input","text":"<ul> <li>Menu choices: Enter single digits or numbers</li> <li>Multiple selections: Comma-separated values (e.g., \"1,3,5\")</li> <li>Ranges: Not supported, use comma-separated lists</li> </ul>"},{"location":"user-guide/interface/#file-path-input","title":"File Path Input","text":"<ul> <li>Supports Windows and Unix-style paths</li> <li>Automatically converts backslashes to forward slashes</li> <li>Creates directories if they don't exist (with user confirmation)</li> </ul>"},{"location":"user-guide/interface/#error-handling","title":"Error Handling","text":""},{"location":"user-guide/interface/#common-error-messages","title":"Common Error Messages","text":"<pre><code>\u274c Error loading file: [Errno 2] No such file or directory\nInvalid choice. Please try again.\nNo numerical columns found for scaling/transformation.\n</code></pre>"},{"location":"user-guide/interface/#error-recovery","title":"Error Recovery","text":"<ul> <li>Invalid inputs return to the menu</li> <li>File errors provide clear messages</li> <li>Operations can be cancelled without data loss</li> <li>Press Enter to continue after errors</li> </ul>"},{"location":"user-guide/interface/#status-messages","title":"Status Messages","text":""},{"location":"user-guide/interface/#success-messages","title":"Success Messages","text":"<pre><code>\u2705 Successfully converted 'species' to String (object)\nSuccess! Dataset loaded with 150 rows and 5 columns.\nFeatures scaled and saved successfully\n</code></pre>"},{"location":"user-guide/interface/#warning-messages","title":"Warning Messages","text":"<pre><code>\u26a0\ufe0f Warning: Target variable has 150 unique values\nNo missing values found in the dataset.\nColumn 'price' contains zeros which cannot be reciprocally transformed.\n</code></pre>"},{"location":"user-guide/interface/#tips-for-effective-use","title":"Tips for Effective Use","text":"<ol> <li>Terminal Size: RIDE CLI adapts to your terminal width - use a wider terminal for better visualization</li> <li>Quick Navigation: Use the number keys for faster menu navigation</li> <li>Data Backup: Always keep a backup of your original data</li> <li>Path Entry: Use Tab completion in your terminal when entering file paths</li> <li>Cancel Operations: Most operations can be cancelled by entering 'exit' or invalid input</li> <li>Clear Screen: The interface automatically clears the screen between major operations</li> </ol>"},{"location":"user-guide/interface/#keyboard-shortcuts","title":"Keyboard Shortcuts","text":"<ul> <li>Enter: Confirm selection or continue</li> <li>Ctrl+C: Force quit the application (use with caution)</li> <li>Number Keys: Quick menu selection</li> <li>$: Quick export shortcut from main menu</li> </ul>"},{"location":"user-guide/interface/#interface-customization","title":"Interface Customization","text":"<p>While RIDE CLI doesn't offer built-in customization, you can: - Adjust terminal font size for better readability - Change terminal color scheme to improve contrast - Resize terminal window to accommodate visualizations</p>"}]}